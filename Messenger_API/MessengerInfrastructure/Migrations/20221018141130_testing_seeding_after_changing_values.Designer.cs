// <auto-generated />
using System;
using MessengerInfrastructure.MessageContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MessengerInfrastructure.Migrations
{
    [DbContext(typeof(MessageDbContext))]
    [Migration("20221018141130_testing_seeding_after_changing_values")]
    partial class testing_seeding_after_changing_values
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MessengerInfrastructure.Entity.MessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Message", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Attachments = "Attachments",
                            CreatedDate = new DateTime(2022, 10, 18, 14, 11, 29, 888, DateTimeKind.Utc).AddTicks(9341),
                            From = "TestFrom@gmail.com",
                            FromName = "FromName",
                            IsDeleted = false,
                            Message = "Message",
                            Title = "Title",
                            To = "testTo@gmail.com",
                            ToName = "ToName",
                            UpdatedDate = new DateTime(2022, 10, 18, 14, 11, 29, 888, DateTimeKind.Utc).AddTicks(9343)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
